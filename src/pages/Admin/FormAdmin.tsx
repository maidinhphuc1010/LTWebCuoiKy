import { Form, Input, Button, message } from 'antd';
import { useEffect } from 'react';
import { useModel } from 'umi';

const FormAdmin = () => {
  const [form] = Form.useForm();
  const {
    current,
    isEdit,
    setVisible,
    handleCreate,
    handleUpdate,
  } = useModel('admin');

  useEffect(() => {
    if (isEdit) {
      form.setFieldsValue(current);
    } else {
      form.resetFields();
    }
  }, [current, isEdit]);

  const onFinish = async (values: any) => {
    console.log('üöÄ Sending values:', values); // gi√∫p b·∫°n ki·ªÉm tra d·ªØ li·ªáu th·∫≠t s·ª±
    try {
      if (isEdit) {
        await handleUpdate(values);
      } else {
        await handleCreate(values);
      }
      message.success(isEdit ? 'C·∫≠p nh·∫≠t th√†nh c√¥ng' : 'T·∫°o m·ªõi th√†nh c√¥ng');
      setVisible(false);
    } catch (err: any) {
      console.error('‚ùå L·ªói khi x·ª≠ l√Ω:', err);
      message.error(err?.message || 'C√≥ l·ªói x·∫£y ra');
    }
  };

  return (
    <Form form={form} layout="vertical" onFinish={onFinish}>
      <Form.Item
        name="adminId"
        label="M√£ Admin"
        rules={[{ required: true, message: 'Ph·∫£i ƒëi·ªÅn m√£ Admin' }]}
      >
        <Input disabled={isEdit} />
      </Form.Item>

      <Form.Item
        name="fullName"
        label="H·ªç v√† t√™n"
        rules={[{ required: true, message: 'Ph·∫£i ƒëi·ªÅn t√™n ƒë·∫ßy ƒë·ªß' }]}
      >
        <Input />
      </Form.Item>

      <Form.Item
        name="email"
        label="Email"
        rules={[
          { required: true, message: 'Ph·∫£i ƒëi·ªÅn email' },
          { type: 'email', message: 'Email kh√¥ng ƒë√∫ng ƒë·ªãnh d·∫°ng' },
        ]}
      >
        <Input />
      </Form.Item>

      <Form.Item
        name="phoneNumber"
        label="S·ªë ƒëi·ªán tho·∫°i"
        rules={[{ required: true, message: 'Ph·∫£i ƒëi·ªÅn s·ªë ƒëi·ªán tho·∫°i' }]}
      >
        <Input />
      </Form.Item>

      <Form.Item
        name="idCardNumber"
        label="CCCD (s·ª≠ d·ª•ng l√†m m·∫≠t kh·∫©u)"
        rules={[{ required: true, message: 'Ph·∫£i ƒëi·ªÅn CCCD' }]}
      >
        <Input.Password />
      </Form.Item>

      <Form.Item name="address" label="ƒê·ªãa ch·ªâ">
        <Input />
      </Form.Item>

      {/* backend t·ª± sinh employeeId, kh√¥ng c·∫ßn nh·∫≠p */}
      <Form.Item name="employeeId" hidden>
        <Input />
      </Form.Item>

      <Form.Item>
        <Button type="primary" htmlType="submit" block>
          {isEdit ? 'C·∫≠p nh·∫≠t' : 'Th√™m m·ªõi'}
        </Button>
      </Form.Item>
    </Form>
  );
};

export default FormAdmin;
